---
title: "Project Overview"
Author: Alana Pooler & Monica McDaniel
format: html
toc: TRUE
---

### Table of Contents:

1.  Overview: Introduction and description of workflow

2.  Data Processing: Functions to query API and summarize data

3.  investigation: Using functions to investigate data

## Project Goal

The goal of this project is to write functions that will manipulate and process data sets that come from a census API. We have created generic functions to automatically summarize and plot certain returned data.

## Project Components

**Tibble helper function:**

-   Add info about to_tibble helper function
-   Add example usage

**Parse times helper function:**

-   This function takes a string containing a range of times and returns the midpoint of those two times.

-   Example: given "12:30p.m to 12:34p.m", parse_times() will return "12:42p.m"

**Code look-up helper function:**

-   This function uses the Census API variable information to look up the times associated with a given code for the JWAP and JWDP variables.

-   The function uses the year specified in query_pums() to access the variable metadata.

-   The parse_times() function is applied after looking up the codes.

-   Example: given "258" for the variable "JWAP", code_lookup() will return the string "9:40 p.m. to 9:44 p.m."

**Query Census API function:**

-   This function allows the user to query the PUMS API with their own inputs.

-   The user can change the year of survey, the numeric and categorical variables retrieved, and the geography level.

-   Example Usage:

    ``` r
    # Default Arguments
    query_pums(
      year = 2022,
      num_vars = c('AGEP', 'PWGTP'),
      cat_vars = 'SEX',
      geo_level = 'All',
      subset = NULL
    )
    ```

    *Note: it is not recommended to call query_pums() without sub-setting the geography level unless necessary. This will be time-consuming due to the size of the census data sets.*

    ``` r
    # Specifying a geography level and subset
    query_pums(
      geo_level = 'State',
      subset = '37'
    )

    # Specifying multiple geography levels
    query_pums(
      geo_level = 'Region',
      subset = c('1', '3')
    )
    ```

**Query Census API with multiple years function:**

**Generic summary function:**
