---
title: "Overview"
format: html
editor_options: 
  chunk_output_type: console
---

This portion of the project will go here:
'Lastly, weâ€™ll write up a document via quarto (just like we did with the homework) to describe our thought process and give examples of using the functions.'

<<<<<<< HEAD
first we should load some of our packages from the tidyverse package
```{r}
library(readr) #must install first
library(tidyverse) #must install first 
library(httr) #must install first
library(tidycensus) #must install first)
library(jsonlite) #must install first 
```

save the url as a string object
```{r}
URL_ids <- "https://api.census.gov/data/2023/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24"
#next we will load the data from the API website so that we can use it for our project
id_info <- httr::GET(URL_ids)
str(id_info, max.level = 1)
```

extracting the content portion because this is the data we will need to work with 
```{r}
parsed_pums_info <- fromJSON(rawToChar(id_info$content))
col_names <- parsed_pums_info[1, ]
data_rows <- parsed_pums_info[-1, ]
```

creating a tibble to view data more clearly
```{r}
pums_info <- as_tibble(data_rows)
colnames(pums_info) <- col_names 
```

displaying tibble
```{r}
pums_info
```
=======
## Project Goal

The goal of this project is to write functions that will manipulate and process data sets that come from a census API. We have created generic functions to automatically summarize and plot certain returned data.

## Project Outline
>>>>>>> 250869f09a91300ec03cf35030bf7b3fc51d3f35

tibble helper function info:

Function to query API:

- This function allows the user to query the PUMS API with their own inputs. The user can change the year of survey, the numeric and categorical variables retrieved, and the geography level.
- Add examples of use