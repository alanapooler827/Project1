---
title: "Narrative"
format: html
toc: TRUE
---

## Project Components

### Helper functions

**Tibble helper function:**

-   This function takes the API request built in query_pums() and turns it into a tibble.

-   Example usage:

    ``` r
    # after building API URL, use GET()
    api_request <- GET(api_url)

    # Call helper function to turn query results into tibble
    data <- to_tibble(request)
    ```

**Parse times helper function:**

-   This function takes a string containing a range of times and returns the midpoint of those two times.

-   Example: given "12:30p.m to 12:34p.m", parse_times() will return "12:42p.m"

**Code look-up helper function:**

-   This function uses the Census API variable information to look up the times associated with a given code for the JWAP and JWDP variables.

-   The function uses the year specified in query_pums() to access the variable metadata.

-   The parse_times() function is applied after looking up the codes.

-   Example: given "258" for the variable "JWAP", code_lookup() will return the string "9:40 p.m. to 9:44 p.m."

### Query Census API function:

-   This function allows the user to query the PUMS API with their own inputs.

-   The user can change the year of survey, the numeric and categorical variables retrieved, and the geography level.

-   Example Usage:

    ``` r
    # Default Arguments
    query_pums(
      year = 2022,
      num_vars = c('AGEP', 'PWGTP'),
      cat_vars = 'SEX',
      geo_level = 'State',
      subset = '18'
    )
    ```

    *Note: it is not recommended to call query_pums() without sub-setting the geography level unless necessary. This will be time-consuming due to the size of the census data sets.*

    ``` r
    # Specifying a geography level and subset
    query_pums(
      geo_level = 'State',
      subset = '37'
    )

    # Specifying multiple geography levels
    query_pums(
      geo_level = 'Region',
      subset = c('1', '3')
    )
    ```

### Multi-year Census API query function

-   This function allows users to request multiple years of survey data. One tibble containing all requested years is returned.

-   Example usage:

    ``` r
    # Default arguments
    query_pums_multi(
      years = c(2019, 2021, 2022),
      num_vars = c('AGEP', 'PWGTP'),
      cat_vars = 'SEX',
      geo_level = 'State',
      subset='18'
    )
    ```

### Summary function

-   This function takes the data returned by query_pums() and returns the weighted mean and standard deviation for numeric variables, and weighted counts for categorical variables.

-   The variable 'PWGTP' is used as the weight.

-   If no variables are specified when calling 'summary()', all variables except for 'PWGTP' will be summarized.

-   Example usage:

    ``` r
    # Summarize all numerical and categorical variables in the 'census' tibble
    summary(census)

    # Specify variables to be summarized from the 'census' tibble
    summary(census, num_vars = c('AGEP', 'GASP'), cat_vars = 'SEX')
    ```

### Plotting Function

-   This function accepts one numeric variable and one categorical variable from the data returned by query_pums() and creates a boxplot.

-   Example usage:

    ``` r
    # Plot variables from the 'census' tibble
    plot(census, cat_var = 'SEX', num_var = 'AGEP')
    ```
