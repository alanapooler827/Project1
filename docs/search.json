[
  {
    "objectID": "pages/overview.html",
    "href": "pages/overview.html",
    "title": "Overview",
    "section": "",
    "text": "This portion of the project will go here: ‘Lastly, we’ll write up a document via quarto (just like we did with the homework) to describe our thought process and give examples of using the functions.’\nfirst we should load some of our packages from the tidyverse package\n\nlibrary(readr) #must install first\n\nWarning: package 'readr' was built under R version 4.5.1\n\nlibrary(tidyverse) #must install first \n\nWarning: package 'tidyverse' was built under R version 4.5.1\n\n\nWarning: package 'ggplot2' was built under R version 4.5.1\n\n\nWarning: package 'tibble' was built under R version 4.5.1\n\n\nWarning: package 'tidyr' was built under R version 4.5.1\n\n\nWarning: package 'purrr' was built under R version 4.5.1\n\n\nWarning: package 'dplyr' was built under R version 4.5.1\n\n\nWarning: package 'stringr' was built under R version 4.5.1\n\n\nWarning: package 'forcats' was built under R version 4.5.1\n\n\nWarning: package 'lubridate' was built under R version 4.5.1\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ purrr     1.1.0\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(httr) #must install first\n\nWarning: package 'httr' was built under R version 4.5.1\n\nlibrary(tidycensus) #must install first)\n\nWarning: package 'tidycensus' was built under R version 4.5.1\n\nlibrary(jsonlite) #must install first \n\nWarning: package 'jsonlite' was built under R version 4.5.1\n\n\n\nAttaching package: 'jsonlite'\n\nThe following object is masked from 'package:purrr':\n\n    flatten\n\n\nsave the url as a string object\n\nURL_ids &lt;- \"https://api.census.gov/data/2023/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24\"\n#next we will load the data from the API website so that we can use it for our project\nid_info &lt;- httr::GET(URL_ids)\nstr(id_info, max.level = 1)\n\nList of 10\n $ url        : chr \"https://api.census.gov/data/2023/acs/acs1/pums?get=SEX,PWGTP,MAR&SCHL=24\"\n $ status_code: int 200\n $ headers    :List of 12\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    1 obs. of  7 variables:\n $ content    : raw [1:969217] 5b 5b 22 53 ...\n $ date       : POSIXct[1:1], format: \"2025-09-23 21:03:59\"\n $ times      : Named num [1:6] 0 0.0119 0.0384 0.1192 0.3169 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\n\nextracting the content portion because this is the data we will need to work with\n\nparsed_pums_info &lt;- fromJSON(rawToChar(id_info$content))\ncol_names &lt;- parsed_pums_info[1, ]\ndata_rows &lt;- parsed_pums_info[-1, ]\n\ncreating a tibble to view data more clearly\n\npums_info &lt;- as_tibble(data_rows)\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n\ncolnames(pums_info) &lt;- col_names",
    "crumbs": [
      "Home",
      "Overview"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Project 1 Index",
    "section": "",
    "text": "Will put table of contents and any other relevant info here",
    "crumbs": [
      "Home",
      "Project 1 Index"
    ]
  }
]